{"version":3,"file":"static/js/587.8c9b52ba.chunk.js","mappings":"uQAMe,SAASA,EAAT,GAA4B,IAAD,EAAVC,EAAU,EAAVA,OAC9B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAa,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GACpD,GAAqCP,EAAAA,EAAAA,UAAQ,OAACM,QAAD,IAACA,EAAAA,EAAiB,IAA/D,eAAOE,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,OAOjBC,EAAAA,EAAAA,YAAU,WACR,GAAIN,EAAe,CACjB,IAAMO,EAAK,mCAAG,oGACOC,EAAAA,EAAAA,IAAA,kHAC0FR,EAD1F,gCADP,OACNL,EADM,OAIZC,EAAQD,EAAKc,KAAKC,SAJN,2CAAH,qDAMXH,GACD,CACF,GAAE,CAACd,EAAQO,IAKZ,OACE,4BACE,kBAAMW,SAtBW,SAAAC,GACnBA,EAAMC,iBACNd,EAAgB,CAAEe,OAAQF,EAAMG,OAAOD,OAAOE,OAC/C,EAmBG,WACE,mBAAOC,KAAK,SAAZ,oBAEE,kBACEA,KAAK,SACLC,KAAK,OACLC,SAXgB,SAAAP,GACxBT,EAAcS,EAAMG,OAAOC,MAC5B,EAUSA,MAAOd,QAGX,mBAAQgB,KAAK,SAAb,sBAEF,wBACGvB,EAAKyB,KAAI,SAAAC,GACR,OACE,yBACE,SAAC,KAAD,CAAMC,GAAID,EAAME,GAAK,GAAIC,MAAO,CAAEC,KAAMrB,GAAxC,SACGiB,EAAMK,OAASL,EAAMM,gBAAkBN,EAAMJ,QAFzCI,EAAME,GAMlB,QAIR,C","sources":["components/Movie/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movie({ APIKEY }) {\n  const [list, setList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuevery = searchParams.get('search') ?? '';\n  const [inputSearch, setInptSearch] = useState(searchQuevery ?? '');\n  const location = useLocation();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ search: event.target.search.value });\n  };\n\n  useEffect(() => {\n    if (searchQuevery) {\n      const fetch = async () => {\n        const list = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=5a95e7192d9f2e90992b52e155d78e04&language=en-US&query=${searchQuevery}&page=1&include_adult=false`\n        );\n        setList(list.data.results);\n      };\n      fetch();\n    }\n  }, [APIKEY, searchQuevery]);\n\n  const hendleChangeInput = event => {\n    setInptSearch(event.target.value);\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label name=\"search\">\n          Search\n          <input\n            name=\"search\"\n            type=\"text\"\n            onChange={hendleChangeInput}\n            value={inputSearch}\n          />\n        </label>\n        <button type=\"submit\">Find</button>\n      </form>\n      <ul>\n        {list.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={movie.id + ''} state={{ from: location }}>\n                {movie.title || movie.original_title || movie.name}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\n"],"names":["Movie","APIKEY","useState","list","setList","useSearchParams","searchParams","setSearchParams","searchQuevery","get","inputSearch","setInptSearch","location","useLocation","useEffect","fetch","axios","data","results","onSubmit","event","preventDefault","search","target","value","name","type","onChange","map","movie","to","id","state","from","title","original_title"],"sourceRoot":""}